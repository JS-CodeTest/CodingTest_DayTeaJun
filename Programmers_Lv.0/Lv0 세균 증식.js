// 문제 설명
// 어떤 세균은 1시간에 두배만큼 증식한다고 합니다. 처음 세균의 마리수 n과 경과한 시간 t가 매개변수로 주어질 때 t시간 후 세균의 수를 return하도록 solution 함수를 완성해주세요.

// 제한사항
// 1 ≤ n ≤ 10
// 1 ≤ t ≤ 15

// 풀이 방법 1
function solution(n, t) {
  return n * Math.pow(2, t);
}
// Math.pow()는 거듭제곱 함수

// 풀이 방법 2
function solution(n, t) {
  return n << t;
}
// 시프트 연산의 특징은 왼쪽으로 비트 열을 이동하였을 경우에는 2의 배수의 곱이고, 오른쪽으로 비트 열을 이동했을 경우에는 2의 배수의 나눗셈이다.  예시를 들자면 '10 << 1'라는 연산을 보면 10진수 정수인 10을 2진수로 바꾸어 왼쪽으로 2비트 움직이라는 말이다. 10진수를 2진수로 변환하면 '0000 1010'이다. 여기서 왼쪽으로 1비트 움직이면 '0001 0100'이되며, 다시 10진수로 변환하면 20이 되는 것을 알 수 있다. 여기에서 시프트 연산자의 계산 공식을 알 수 있게 된다. 10에서 20이 되는 걸 살펴보면 '10 * 2'라는 것을 알 수 있다. 여기서 2는 2^1라는 것을 유추할 수 있다. 즉 'x << n'은 'x * 2^n'이라는 공식이 성립하는 것을 알 수 있다.

// !문제 링크 : https://school.programmers.co.kr/learn/courses/30/lessons/120910
